<h3>Current exercise schedule</h3>
<button class="btn btn-outline-primary" @onclick="Props.Rebuild"><span class="oi oi-random"></span> New schedule</button>
<br />
<br />

@foreach (var item in Props.Schedule)
{
    <div class="card">
        <div class="row no-gutters">
            <div class="col-4 text-center">
                <span style="display:inline-block; height:100%; vertical-align: middle;"></span>
                <img src="data:image/png;base64, @(Convert.ToBase64String(item.Icon))" alt="@item.Name" style="width: calc(100% - 5px);">
            </div>
            <div class="col-8">
                <div class="card-body">
                    <h5 class="card-title">
                        @item.Name&nbsp;
                        @if (Props.ExerciseCount is object && Props.ExerciseCount.ContainsKey(item.Id))
                        {
                            <span class="badge badge-info">@Props.ExerciseCount[item.Id]</span>
                        }
                    </h5>
                    <p class="card-text">@item.Muscles</p>
                    <button @onclick:preventDefault @onclick="() => Props.Start.InvokeAsync(item.Id)" class="btn btn-outline-success"><span class="oi oi-media-play"></span></button>
                    <button @onclick:preventDefault @onclick="() => Props.Replace.InvokeAsync(item)" class="btn btn-outline-warning"><span class="oi oi-reload"></span></button>
                    <button @onclick:preventDefault @onclick="Props.OpenLog" class="btn btn-outline-primary"><span class="oi oi-account-login"></span></button>
                </div>
            </div>
        </div>
    </div>
    <br />
}

@code {
    [Parameter]
    public ExerciseScheduleProps Props { get; set; }
}
