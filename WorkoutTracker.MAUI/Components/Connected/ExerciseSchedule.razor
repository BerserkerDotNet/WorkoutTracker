<h2>Today's schedule</h2>

<MudMenu Class="mb-2" StartIcon="@Icons.Filled.Schedule" EndIcon="@Icons.Filled.KeyboardArrowDown" Label="Exercise profile" Color="Color.Primary" Variant="Variant.Filled"  >
    <MudMenuItem OnClick="() => Props.Rebuild.InvokeAsync(ExerciseProfile.UpperBody)" >Upper body</MudMenuItem>
    <MudMenuItem OnClick="() => Props.Rebuild.InvokeAsync(ExerciseProfile.LowerBody)" >Lower body</MudMenuItem>
</MudMenu>

@if (!Props.Schedule.Any())
{
	<MudCard>
		<MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="300px" />
		<MudCardContent>
			<MudSkeleton Width="30%" Height="42px;" />
			<MudSkeleton Width="80%" />
			<MudSkeleton Width="100%" />
		</MudCardContent>
		<MudCardActions>
			<MudSkeleton Width="64px" Height="40px" Class="ml-2" />
			<MudSkeleton Width="105px" Height="40px" Class="ml-3" />
		</MudCardActions>
	</MudCard>
}

@foreach (var scheduleItem in Props.Schedule)
{
	var item = scheduleItem.Exercise;
	<MudCard Class="mb-4" Outlined="true">
		<div style="width: calc(100% - 5px);">
			<img src="/images/@(item.ImagePath)" alt="@item.Name" style="width: calc(50% - 5px);margin-left:auto;margin-right:auto;display: block">
		</div>
		<MudCardContent>
			<MudText Align="Align.Center" Typo="Typo.h5">@item.Name</MudText>
			<MudText Typo="Typo.body2">@item.Description</MudText>
		</MudCardContent>
		<MudCardActions>
			<div class="d-flex align-center justify-space-between" style="width:100%">
				<MudIconButton Icon="@Icons.Material.Filled.ArrowBack" OnClick="() => Props.Previous.InvokeAsync(scheduleItem.Category)" />
				<MudBadge Origin="Origin.TopRight" Content="@(Props.ExerciseCount.ContainsKey(item.Id) ? Props.ExerciseCount[item.Id] : 1)" Color="Color.Primary" Class="mx-6 my-4">
					<MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.PlayArrow" Color="Color.Success" OnClick="() => Props.Start.InvokeAsync(scheduleItem)">Start</MudButton>
				</MudBadge>
				<MudIconButton Icon="@Icons.Material.Filled.ArrowForward" OnClick="() => Props.Next.InvokeAsync(scheduleItem.Category)" />
				@*<MudButton Class="ml-2" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Refresh" Color="Color.Warning" OnClick="() => Props.Replace.InvokeAsync(item)">Change</MudButton>*@
			</div>
		</MudCardActions>
	</MudCard>
}

@code {
	[Parameter]
	public ExerciseScheduleProps Props { get; set; }
}
