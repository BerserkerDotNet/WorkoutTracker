@page "/log"
@inject AppState State

<h1>Exercise history</h1>
<Virtualize Context="logRecord" ItemsProvider="State.LoadExerciseLog">
    <ItemContent>
        <div class="card">
            <div class="row no-gutters">
                <div class="col-4 text-center">
                    <span style="display:inline-block; height:100%; vertical-align: middle;"></span>
                    <img src="data:image/png;base64, @logRecord.Icon" alt="@logRecord.Name" style="width: calc(100% - 5px);">
                </div>
                <div class="col-8">
                    <div class="card-body">
                        <h5 class="card-title">@logRecord.Name</h5>
                        <p class="card-text">Reps: @logRecord.LogEntry.Repetitions Weight: @logRecord.LogEntry.Weight Duration: @logRecord.LogEntry.Duration</p>
                        <Rating MaxStars="5" Value="@logRecord.LogEntry.Score" IsReadonly="true" />
                        <div>
                            <button @onclick:preventDefault @onclick="() => EditExercise(logRecord.LogEntry)" class="btn btn-warning">Edit</button>
                            <button @onclick:preventDefault @onclick="() => DeleteExercise(logRecord.LogEntry)" class="btn btn-danger">Delete</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </ItemContent>
    <Placeholder>
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </Placeholder>
</Virtualize>

@code
{
    public async Task EditExercise(ExerciseLogEntry log)
    {
    }

    public async Task DeleteExercise(ExerciseLogEntry log)
    {
        await State.DeleteExerciseLog(log);
    }
}

