@page "/"
@attribute [Authorize]
@inherits ConnectedComponentBase<RootState, ExerciseScheduleProps>

<h2>Today's schedule</h2>

<MudSelect T="ExerciseProfile" Label="Profile" Class="mb-4" AnchorOrigin="Origin.BottomCenter" ValueChanged="OnProfileChanged" Value="Props.SelectedProfile" >
	<Foreach Items="ExerciseProfile.Profiles" Context="item">
		<MudSelectItem Value="@item">@item.Name</MudSelectItem>
	</Foreach>
</MudSelect>

@if (!Props.Schedule.Any())
{
	<MudCard>
		<MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="300px" />
		<MudCardContent>
			<MudSkeleton Width="30%" Height="42px;" />
			<MudSkeleton Width="80%" />
			<MudSkeleton Width="100%" />
		</MudCardContent>
		<MudCardActions>
			<MudSkeleton Width="64px" Height="40px" Class="ml-2" />
			<MudSkeleton Width="105px" Height="40px" Class="ml-3" />
		</MudCardActions>
	</MudCard>
}

@foreach (var scheduleItem in Props.Schedule)
{
	var item = scheduleItem.CurrentExercise;
	<MudCard Class="mb-4" Outlined="true">
		<Image Path="@item.ImagePath" ImageName="@item.Name" />
		<MudCardContent>
			<MudText Align="Align.Center" Typo="Typo.h5">@item.Name</MudText>
			<MudText Typo="Typo.body2">@item.Description</MudText>
		</MudCardContent>
		<MudCardActions>
			<div class="d-flex align-center justify-space-between" style="width:100%">
				<MudIconButton Icon="@Icons.Material.Filled.ArrowBack" OnClick="() => Props.Previous.InvokeAsync(scheduleItem)" />
				<MudBadge Origin="Origin.TopRight" Content="@(Props.ExerciseCountLookup.ContainsKey(item.Id) ? Props.ExerciseCountLookup[item.Id] : 1)" Color="Color.Primary" Class="mx-6 my-4">
					<MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.PlayArrow" Color="Color.Success" OnClick="() => Props.Start.InvokeAsync(scheduleItem)">Start</MudButton>
				</MudBadge>
				<MudIconButton Icon="@Icons.Material.Filled.ArrowForward" OnClick="() => Props.Next.InvokeAsync(scheduleItem)" />
			</div>
		</MudCardActions>
	</MudCard>
}
