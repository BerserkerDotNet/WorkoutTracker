<MudText Typo="Typo.h5" Align="Align.Center" Class="py-2">@Props.Log.Exercise.Name</MudText>

<MudGrid Spacing="2" Justify="Justify.Center">
	<MudItem xs="6">
		<MudPaper Class="pa-1 ma-2" Elevation="1">
			<Image Path="@Props.Log.Exercise.ImagePath" ImageName="@Props.Log.Exercise.Name" Width="150" Height="150" />
		</MudPaper>
	</MudItem>
	<MudItem xs="6">
		<ExerciseTimerBadge IsResting="!_isRunning" Time="_timeTracker.Elapsed" TargetRestTime="Props.CurrentSchedule.TargetRest" RestingTemplate="Resting {0}" WorkingoutTemplate="Exercising {0}" />
		<WeightSelector @bind-Weight="_weight" />
		@if (!Props.PreviousLogLoading && Props.PreviousLog is object)
		{
			<MudChip Icon="@Icons.Filled.History" Label="true" Color="Color.Info" Class="mx-0 my-2" Style="width:100%">@Props.PreviousLog.Repetitions reps of @Props.PreviousLog.WeightFormatted</MudChip>
		}
		else if (!Props.PreviousLogLoading && Props.PreviousLog is null)
		{
			<MudChip Icon="@Icons.Filled.History" Label="true" Color="Color.Default" Class="mx-0 my-2" Style="width:100%">No stats.</MudChip>
		}
		else
		{
			<MudProgressCircular Class="d-flex mx-auto my-2" Size="Size.Small" Color="Color.Primary" Indeterminate="true" />
			<MudText Align="Align.Center" Typo="Typo.subtitle2" Color="Color.Dark">
				Loading stats...
			</MudText>
		}
	</MudItem>
	<MudItem xs="12" style="display:flex;justify-content: center">
		<MudBadge Origin="Origin.TopRight" Content="@($"{Props.SetNumber}/{Props.CurrentSchedule.TargetSets}")" Color="Color.Secondary">
			@if (_isRunning)
			{
				<MudButton Size="Size.Large" StartIcon="@Icons.Material.Filled.StopCircle" IconColor="Color.Warning" Color="Color.Primary" OnClick="EndSet">Finish set</MudButton>
			}
			else
			{
				<MudButton Size="Size.Large" IconColor="Color.Success" StartIcon="@Icons.Material.Filled.PlayCircle" Color="Color.Primary" OnClick="StartSet">Start set</MudButton>
			}

		</MudBadge>
	</MudItem>
	<MudItem xs="12" style="display:flex;justify-content: center">
		<MudButtonGroup Color="Color.Primary" Variant="Variant.Text">
			<MudButton StartIcon="@Icons.Filled.ArrowBack" IconColor="Color.Warning" OnClick="() => Props.Previous(Props.PreviousExerciseId)" Disabled="@DisablePrevious">Prev</MudButton>
			<MudButton StartIcon="@Icons.Filled.SwapHoriz" IconColor="Color.Warning" OnClick="() => Props.Replace(Props.CurrentSchedule)" Disabled="@DisableReplace">Replace</MudButton>
			<MudButton StartIcon="@Icons.Filled.SwapVert" IconColor="Color.Warning" OnClick="() => Props.Swap(Props.CurrentSchedule)" Disabled="@DisableSwap">Swap</MudButton>
			<MudButton EndIcon="@Icons.Filled.ArrowForward" IconColor="Color.Warning" OnClick="() => Props.Next(Props.NextExerciseId)" Disabled="@DisableNext">Next</MudButton>
		</MudButtonGroup>
	</MudItem>
	<MudItem xs="12">
		<MudDivider Class="my-2" />
		<ExerciseTimeline Sets="Props.Log.Sets" OnSave="EventCallback.Factory.Create(this, SaveCurrentLog)" OnDelete="EventCallback.Factory.Create<Set>(this, OnDeleteSet)" ShowWeightInKG="false" />
	</MudItem>
</MudGrid>