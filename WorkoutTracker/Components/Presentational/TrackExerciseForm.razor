
<MudButton Variant="Variant.Text" OnClick="ToggleExerciseDetails">
    <MudText Typo="Typo.h5" Align="Align.Center" Class="py-2">@Props.Log.Exercise.Name</MudText>
    <MudPopover Open="@_isDetailsShown" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter">
        <MudCard>
            <Image Path="@Props.Log.Exercise.ImagePath" ImageName="@Props.Log.Exercise.Name" Width="150" Height="150" />
            <MudCardContent>
                <MudText Typo="Typo.h5">@Props.Log.Exercise.Name</MudText>
                <MudText Typo="Typo.body2">@Props.Log.Exercise.Description</MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Text" Color="Color.Primary">Go to exercise</MudButton>
                <MudButton Class="ml-auto mr-n3" Variant="Variant.Text" OnClick="@ToggleExerciseDetails" Color="Color.Info">Close</MudButton>
            </MudCardActions>
        </MudCard>
    </MudPopover>
    </MudButton>
<MudGrid Spacing="2" Justify="Justify.Center">
    <MudItem xs="6">
        <PreviousWorkoutStats PreviousLog="@Props.PreviousLog" />
    </MudItem>
    <MudItem xs="6">
        <ExerciseTimerBadge IsResting="!_isRunning" Time="_timeTracker.Elapsed" TargetRestTime="Props.CurrentSchedule.TargetRest" RestingTemplate="Resting {0}" WorkingoutTemplate="Exercising {0}" />
        <WeightSelector @bind-Weight="_weight" />
    </MudItem>
    <MudItem xs="12" style="display:flex;justify-content: center">
        <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
            <MudButton StartIcon="@Icons.Filled.ArrowBack" IconColor="Color.Warning" OnClick="() => Props.Previous(Props.PreviousExerciseId)" Disabled="@DisablePrevious">Prev</MudButton>
            @if (_isRunning)
            {
                <MudButton Size="Size.Large" StartIcon="@Icons.Material.Filled.StopCircle" IconColor="Color.Warning" Color="Color.Primary" OnClick="EndSet">Finish set</MudButton>
            }
            else
            {
                <MudButton Size="Size.Large" IconColor="Color.Success" StartIcon="@Icons.Material.Filled.PlayCircle" Color="Color.Primary" OnClick="StartSet">Start set</MudButton>
            }
            <MudButton EndIcon="@Icons.Filled.ArrowForward" IconColor="Color.Warning" OnClick="() => Props.Next(Props.NextExerciseId)" Disabled="@DisableNext">Next</MudButton>
        </MudButtonGroup>
    </MudItem>
    <MudItem xs="12" style="display:flex;justify-content: center">
        <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
            <MudButton StartIcon="@Icons.Filled.Add" IconColor="Color.Warning" Disabled="false" OnClick="() => Props.AddNew()">Add</MudButton>
            <MudButton StartIcon="@Icons.Filled.SwapHoriz" IconColor="Color.Warning" OnClick="() => Props.Replace(Props.CurrentSchedule)" Disabled="@DisableReplace">Substitude</MudButton>
            <MudButton StartIcon="@Icons.Filled.ArrowCircleDown" IconColor="Color.Warning" OnClick="() => Props.Swap(Props.CurrentSchedule)" Disabled="@DisableSwap">Do later</MudButton>
        </MudButtonGroup>
    </MudItem>
    <MudItem xs="12">
        <MudDivider Class="my-2" />
        <ExerciseTimeline Sets="Props.Log.Sets" OnSave="EventCallback.Factory.Create(this, SaveCurrentLog)" OnDelete="EventCallback.Factory.Create<Set>(this, OnDeleteSet)" ShowWeightInKG="false" />
    </MudItem>
</MudGrid>