<If Condition="!Props.Schedule.Any()">
    <Then>
        <MudCard>
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="300px" />
            <MudCardContent>
                <MudSkeleton Width="30%" Height="42px;" />
                <MudSkeleton Width="80%" />
                <MudSkeleton Width="100%" />
            </MudCardContent>
            <MudCardActions>
                <MudSkeleton Width="64px" Height="40px" Class="ml-2" />
                <MudSkeleton Width="105px" Height="40px" Class="ml-3" />
            </MudCardActions>
        </MudCard>
    </Then>
    <Else>
        <MudExpansionPanels MultiExpansion="true">
            @foreach (var scheduleItem in Props.Schedule)
            {
                <ExercisePanel Schedule="scheduleItem" ControlContext="_controlContext" PreviousSessionLog="Props.PreviousSessionLog" TodayLogByExercise="Props.TodayLogByExercise" />
            }
        </MudExpansionPanels>
        <ExerciseSelectorForm ActionText="Add exercise" Exercises="Props.AllExercises" OnExerciseSelected="OnAddExercise" />
    </Else>
</If>

@code{
    ExerciseControlContext _controlContext = new ExerciseControlContext(null, null, null, null);

    [Parameter]
    public ExerciseScheduleProps Props { get; set; }

    protected override void OnParametersSet()
    {
        _controlContext = new ExerciseControlContext(Props.AddExercise, Props.RemoveExercise, Props.Save, Props.SetScheduleTargetSets);
    }

    private async Task OnAddExercise(ExerciseViewModel exercise)
    {
        await Props.AddExercise(new SpecificExerciseSelector(exercise.Id));
    }
}
